# docker-compose.yml â€” NovaOS stack (WSL2 / ARM64-ready)
# Compose v2 syntax (no "version" key)

name: novaos

networks:
  nova_net:
    driver: bridge

volumes:
  pg_data:

services:
  # -------------------- INFRA --------------------
  db:
    image: postgres:16-alpine
    container_name: nova-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-nova}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-nova_pass}
      POSTGRES_DB: ${POSTGRES_DB:-nova_core}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - nova_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-nova} -d ${POSTGRES_DB:-nova_core}"]
      interval: 5s
      timeout: 3s
      retries: 20
    profiles: ["infra"]

  redis:
    image: redis:7-alpine
    container_name: nova-redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    networks:
      - nova_net
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep -i PONG"]
      interval: 5s
      timeout: 3s
      retries: 20
    profiles: ["infra"]

  # -------------------- APPS --------------------
  core-api:
    build:
      context: .
      dockerfile: services/core-api/Dockerfile
    container_name: nova-core-api
    env_file: [.env]
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://nova:nova_pass@db:5432/nova_core}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      JWT_PRIVATE_KEY_PATH: ${JWT_PRIVATE_KEY_PATH:-/run/secrets/dev_jwt_private.pem}
      JWT_PUBLIC_KEY_PATH: ${JWT_PUBLIC_KEY_PATH:-/run/secrets/dev_jwt_public.pem}
    secrets:
      - dev_jwt_private
      - dev_jwt_public
    volumes:
      - ./logs:/app/logs
    ports:
      - "8760:8760"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - nova_net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8760/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 12
    profiles: ["app"]

  echo-ws:
    build:
      context: .
      dockerfile: services/echo/Dockerfile
    container_name: nova-echo
    env_file: [.env]
    environment:
      CORE_API_URL: ${CORE_API_URL:-http://core-api:8760}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
    volumes:
      - ./logs:/app/logs
    ports:
      - "8765:8765"
    depends_on:
      core-api:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - nova_net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8765/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 8
    profiles: ["app"]

  gypsy-cove:
    build:
      context: .
      dockerfile: apps/gypsy-cove/Dockerfile
    container_name: nova-gypsy-cove
    env_file: [.env]
    environment:
      NODE_ENV: production
      CORE_API_URL: ${CORE_API_URL:-http://core-api:8760}
    ports:
      - "3000:3000"
    depends_on:
      core-api:
        condition: service_started
    restart: unless-stopped
    networks:
      - nova_net
    profiles: ["app"]

  nova-console:
    build:
      context: .
      dockerfile: apps/nova-console/Dockerfile
    container_name: nova-console
    env_file: [.env]
    environment:
      NODE_ENV: production
      CORE_API_URL: ${CORE_API_URL:-http://core-api:8760}
    ports:
      - "3001:3001"
    depends_on:
      core-api:
        condition: service_started
    restart: unless-stopped
    networks:
      - nova_net
    profiles: ["app"]

  web-shell:
    build:
      context: .
      dockerfile: apps/web-shell/Dockerfile
    container_name: nova-web-shell
    env_file: [.env]
    environment:
      NODE_ENV: production
      CORE_API_URL: ${CORE_API_URL:-http://core-api:8760}
    ports:
      - "3002:3002"
    depends_on:
      core-api:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - nova_net
    profiles: ["app"]

# -------------------- SECRETS --------------------
secrets:
  dev_jwt_private:
    file: ./secrets/dev_jwt_private.pem
  dev_jwt_public:
    file: ./secrets/dev_jwt_public.pem
