# docker-compose.yml â€” NovaOS stack (WSL2 / ARM64-ready)
# Compose v2 syntax (no "version" key)

name: novaos

networks:
  nova_net:
    driver: bridge

volumes:
  pg_data:

services:
  # -------------------- INFRA --------------------
  db:
    image: postgres:16-alpine
    container_name: nova-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-nova}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-nova_pass}
      POSTGRES_DB: ${POSTGRES_DB:-nova_core}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - '127.0.0.1:5433:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - nova_net
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-nova} -d ${POSTGRES_DB:-nova_core}']
      interval: 5s
      timeout: 3s
      retries: 20
    profiles: ['infra']

  redis:
    image: redis:7-alpine
    container_name: nova-redis
    restart: unless-stopped
    command: ['redis-server', '--appendonly', 'yes']
    ports:
      - '127.0.0.1:6380:6379'
    networks:
      - nova_net
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping | grep -i PONG']
      interval: 5s
      timeout: 3s
      retries: 20
    profiles: ['infra']

  # -------------------- APPS --------------------
  core-api:
    build:
      context: .
      dockerfile: services/core-api/Dockerfile
    container_name: nova-core-api
    env_file: [.env]
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://nova:nova_pass@db:5432/nova_core}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      JWT_PRIVATE_KEY_PATH: ${JWT_PRIVATE_KEY_PATH:-/run/secrets/dev_jwt_private.pem}
      JWT_PUBLIC_KEY_PATH: ${JWT_PUBLIC_KEY_PATH:-/run/secrets/dev_jwt_public.pem}
      AGENT_SHARED_TOKEN: ${AGENT_SHARED_TOKEN}
      ECHO_INTERNAL_TOKEN: ${ECHO_INTERNAL_TOKEN}
    secrets:
      - dev_jwt_private
      - dev_jwt_public
    volumes:
      - ./logs:/app/logs
    ports:
      - '9760:8000'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - nova_net
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:8000/internal/healthz || exit 1']
      interval: 5s
      timeout: 3s
      retries: 12
    profiles: ['app']

  echo-ws:
    build:
      context: .
      dockerfile: services/echo/Dockerfile
    container_name: nova-echo
    env_file: [.env]
    environment:
      CORE_API_URL: ${CORE_API_URL:-http://core-api:8000}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      JWT_PUBLIC_KEY_PATH: ${JWT_PUBLIC_KEY_PATH}
    volumes:
      - ./logs:/app/logs
    ports:
      - '9765:8000'
    depends_on:
      core-api:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - nova_net
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:8000/healthz || exit 1']
      interval: 5s
      timeout: 3s
      retries: 8
    profiles: ['app']

  gypsy-cove:
    build:
      context: .
      dockerfile: apps/gypsy-cove/Dockerfile
    container_name: nova-gypsy-cove
    env_file: [.env]
    environment:
      NODE_ENV: production
      CORE_API_URL: ${CORE_API_URL:-http://core-api:8000}
      NOVAOS_BASE_URL: ${NOVAOS_BASE_URL:-http://novaos:3001}
    ports:
      - '3000:3000'
    depends_on:
      core-api:
        condition: service_started
    restart: unless-stopped
    networks:
      - nova_net
    profiles: ['app']

  novaos:
    build:
      context: .
      dockerfile: apps/novaos/Dockerfile
    container_name: novaos
    env_file: [.env]
    environment:
      NODE_ENV: production
      CORE_API_URL: ${CORE_API_URL:-http://core-api:8000}
      NOVAOS_BASE_URL: ${NOVAOS_BASE_URL:-http://localhost:3001}
    ports:
      - '3001:3001'
    depends_on:
      core-api:
        condition: service_started
    restart: unless-stopped
    networks:
      - nova_net
    profiles: ['app']

  # -------------------- AGENTS --------------------
  agent-nova:
    build:
      context: .
      dockerfile: agents/nova/Dockerfile
    image: ghcr.io/nacktgem/novaos-agent-nova:latest
    restart: unless-stopped
    profiles: ['agents']
    environment:
      PYTHONUNBUFFERED: '1'
      CORE_API_URL: ${CORE_API_URL}
      AGENT_SHARED_TOKEN: ${AGENT_SHARED_TOKEN}
      AGENT_HEARTBEAT_INTERVAL: 20
    command: ['python', '-u', 'scripts/run_with_heartbeat.py', 'agents/nova/agent.py', 'nova']
    healthcheck:
      test: ['CMD', 'python', 'scripts/healthcheck.py', 'agents/nova/agent.py']
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 15s
    read_only: true
    tmpfs:
      - /tmp:size=32m,exec,uid=1000,gid=1000,mode=1777
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    ulimits:
      nofile: 8192
      nproc: 4096

  agent-lyra:
    build:
      context: .
      dockerfile: agents/lyra/Dockerfile
    image: ghcr.io/nacktgem/novaos-agent-lyra:latest
    restart: unless-stopped
    profiles: ['agents']
    environment:
      PYTHONUNBUFFERED: '1'
      CORE_API_URL: ${CORE_API_URL}
      AGENT_SHARED_TOKEN: ${AGENT_SHARED_TOKEN}
      AGENT_HEARTBEAT_INTERVAL: 20
    command: ['python', '-u', 'scripts/run_with_heartbeat.py', 'agents/lyra/agent.py', 'lyra']
    healthcheck:
      test: ['CMD', 'python', 'scripts/healthcheck.py', 'agents/lyra/agent.py']
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 15s
    read_only: true
    tmpfs:
      - /tmp:size=32m,exec,uid=1000,gid=1000,mode=1777
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    ulimits:
      nofile: 8192
      nproc: 4096

  agent-velora:
    build:
      context: .
      dockerfile: agents/velora/Dockerfile
    image: ghcr.io/nacktgem/novaos-agent-velora:latest
    restart: unless-stopped
    profiles: ['agents']
    environment:
      PYTHONUNBUFFERED: '1'
      CORE_API_URL: ${CORE_API_URL}
      AGENT_SHARED_TOKEN: ${AGENT_SHARED_TOKEN}
      AGENT_HEARTBEAT_INTERVAL: 20
    command: ['python', '-u', 'scripts/run_with_heartbeat.py', 'agents/velora/agent.py', 'velora']
    healthcheck:
      test: ['CMD', 'python', 'scripts/healthcheck.py', 'agents/velora/agent.py']
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 15s
    read_only: true
    tmpfs:
      - /tmp:size=32m,exec,uid=1000,gid=1000,mode=1777
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    ulimits:
      nofile: 8192
      nproc: 4096

  agent-glitch:
    build:
      context: .
      dockerfile: agents/glitch/Dockerfile
    image: ghcr.io/nacktgem/novaos-agent-glitch:latest
    restart: unless-stopped
    profiles: ['agents']
    environment:
      PYTHONUNBUFFERED: '1'
      CORE_API_URL: ${CORE_API_URL}
      AGENT_SHARED_TOKEN: ${AGENT_SHARED_TOKEN}
      AGENT_HEARTBEAT_INTERVAL: 20
    command: ['python', '-u', 'scripts/run_with_heartbeat.py', 'agents/glitch/agent.py', 'glitch']
    healthcheck:
      test: ['CMD', 'python', 'scripts/healthcheck.py', 'agents/glitch/agent.py']
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 15s
    read_only: true
    tmpfs:
      - /tmp:size=32m,exec,uid=1000,gid=1000,mode=1777
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    ulimits:
      nofile: 8192
      nproc: 4096

  agent-echo:
    build:
      context: .
      dockerfile: agents/echo/Dockerfile
    image: ghcr.io/nacktgem/novaos-agent-echo:latest
    restart: unless-stopped
    profiles: ['agents']
    secrets:
      - jwt_pub
    environment:
      PYTHONUNBUFFERED: '1'
      REDIS_URL: ${REDIS_URL}
      CORE_API_URL: ${CORE_API_URL}
      ECHO_INTERNAL_TOKEN: ${ECHO_INTERNAL_TOKEN}
      JWT_PUBLIC_KEY_PATH: ${JWT_PUBLIC_KEY_PATH}
      AGENT_SHARED_TOKEN: ${AGENT_SHARED_TOKEN}
      AGENT_HEARTBEAT_INTERVAL: 20
    command: ['python', '-u', 'scripts/run_with_heartbeat.py', 'agents/echo/agent.py', 'echo']
    volumes:
      - type: bind
        source: ./agents
        target: /app/agents
        read_only: true
      - type: bind
        source: ./scripts
        target: /app/scripts
        read_only: true
      - type: bind
        source: ./packages
        target: /app/packages
        read_only: true
      - type: bind
        source: ./services
        target: /app/services
        read_only: true
    healthcheck:
      test: ['CMD', 'python', 'scripts/healthcheck.py', 'agents/echo/agent.py']
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 15s
    read_only: true
    tmpfs:
      - /tmp:size=32m,exec,uid=1000,gid=1000,mode=1777
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    ulimits:
      nofile: 8192
      nproc: 4096
    configs: []
    depends_on:
      - redis
      - core-api

  agent-riven:
    build:
      context: .
      dockerfile: agents/riven/Dockerfile
    image: ghcr.io/nacktgem/novaos-agent-riven:latest
    restart: unless-stopped
    profiles: ['agents']
    environment:
      PYTHONUNBUFFERED: '1'
      CORE_API_URL: ${CORE_API_URL}
      AGENT_SHARED_TOKEN: ${AGENT_SHARED_TOKEN}
      AGENT_HEARTBEAT_INTERVAL: 20
    command: ['python', '-u', 'scripts/run_with_heartbeat.py', 'agents/riven/agent.py', 'riven']
    healthcheck:
      test: ['CMD', 'python', 'scripts/healthcheck.py', 'agents/riven/agent.py']
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 15s
    read_only: true
    tmpfs:
      - /tmp:size=32m,exec,uid=1000,gid=1000,mode=1777
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    ulimits:
      nofile: 8192
      nproc: 4096

  agent-audita:
    build:
      context: .
      dockerfile: agents/audita/Dockerfile
    image: ghcr.io/nacktgem/novaos-agent-audita:latest
    restart: unless-stopped
    profiles: ['agents']
    environment:
      PYTHONUNBUFFERED: '1'
      CORE_API_URL: ${CORE_API_URL}
      AGENT_SHARED_TOKEN: ${AGENT_SHARED_TOKEN}
      AGENT_HEARTBEAT_INTERVAL: 20
    command: ['python', '-u', 'scripts/run_with_heartbeat.py', 'agents/audita/agent.py', 'audita']
    healthcheck:
      test: ['CMD', 'python', 'scripts/healthcheck.py', 'agents/audita/agent.py']
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 15s
    read_only: true
    tmpfs:
      - /tmp:size=32m,exec,uid=1000,gid=1000,mode=1777
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    ulimits:
      nofile: 8192
      nproc: 4096

# -------------------- SECRETS --------------------
secrets:
  dev_jwt_private:
    file: ./secrets/dev_jwt_private.pem
  dev_jwt_public:
    file: ./secrets/dev_jwt_public.pem
  jwt_pub:
    file: secrets/jwt/jwt_public.pem
