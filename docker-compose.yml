version: "3.9"
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  core-api:
    build: ./services/core-api
    depends_on:
      db:
        condition: service_healthy
    env_file: .env.core
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  echo:
    build: ./services/echo
    env_file: .env.echo
    ports:
      - "8010:8010"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8010/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  audita:
    build: ./services/audita
    ports:
      - "8020:8020"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8020/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  velora:
    build: ./services/velora
    ports:
      - "8030:8030"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8030/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  dbdata:
  redisdata:
